plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'

    id 'org.openapi.generator' version '7.7.0'
}

group = 'review-me'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

def openApiGeneratedDir = "$projectDir/src/main/openapi-generated".toString()

sourceSets {
    main {
        java {
            srcDirs openApiGeneratedDir
            srcDirs 'src/main/java'
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // OpenApi
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.22'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
    implementation 'org.openapitools:openapi-generator:7.7.0'
}

test {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName = "spring"
    print("projectDir: $projectDir")
    inputSpec = "$projectDir/../api/api.yml".toString()
    configFile = "$projectDir/../api/openapi-config.json".toString()
    outputDir = openApiGeneratedDir
    globalProperties.set(
            Map.of(
                    "apis", "",
                    "models", "",
                    "supportingFiles", ""
            )
    )
    schemaMappings.set(
            Map.of(
                    "date", "LocalDate",
                    "DateTime", "LocalDateTime",
                    "ProblemDetail", "org.springframework.http.ProblemDetail"
            )
    )
}

tasks.register('clearApiSources', Delete) {
    delete file(openApiGeneratedDir)
}

tasks.clean.dependsOn tasks.clearApiSources
tasks.compileJava.dependsOn tasks.openApiGenerate
tasks.openApiGenerate.dependsOn tasks.clearApiSources
